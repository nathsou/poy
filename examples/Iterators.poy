
fun factorial(n) {
    range(2, n + 1).product()
}

fun solve(a: Num) {
    mut lo = 0
    mut hi = 144
    mut mid = 0
    let eps = 10 ** -12
    let f = x -> x ** x - a

    while Math.abs(hi - lo) > eps {
        mid = (lo + hi) / 2

        if f(mid) >= 0 {
            hi = mid
        } else {
            lo = mid
        }
    }

    mid
}

extend Num {
    fun `+`(n) {
        self + n
    }
}

mut m = Map<_, _>()
m.push("hello", 1)
m.push("world", 2)
m.push("hello", 7)

print(use x = solve(5.9722 * 10 ** 24) in (x, x ** x))
print([1, 2, 3][-1])
print(3.`+`(7))
print(Num::`+`(3, 7))
print([[1, 2, 3]][0][0])
